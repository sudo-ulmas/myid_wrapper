group = "com.example.myid_wrapper"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.9.10"
    repositories {
        google()
        mavenCentral()

    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.5.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")

    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs 'libs'
            dirs project(':myid_wrapper').file('libs')
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    if (project.android.hasProperty("namespace")) {
        namespace = "com.example.myid_wrapper"
    }

    compileSdk = 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }



    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
   // implementation(name:'myidlibrary-debug', ext:'aar')
//    api project(':myidnative')
//    implementation project(':myidnative')
    implementation files('libs/myidlibrary-debug.aar')
    implementation("uz.myid.sdk.capture:myid-capture-sdk:2.3.0")
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.mockito:mockito-core:5.1.0")
}

